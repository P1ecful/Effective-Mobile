swagger: '2.0'
info:
  description: Technical Task for Effective Mobile
  title: User API
  termsOfService: http://swagger.io/terms/
  contact:
    name: API Support
    email: dimonkzyenstov@gmail.com
  license:
    name: MIT LICENSE
    url: https://github.com/P1ecful/ApplyToCourier/blob/main/LICENSE
  version: '1.0'
host: 127.0.0.1:1200
basePath: /
paths:
  /user/create:
    get:
      description: Add User
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Users
      summary: Creating user
      parameters:
        - type: string
          name: client_name
          example: "Artem"
          in: Add new user
          
        - type: string
          name: Surname
          example: "Ivanov"
          
        - type: string
          name: Address
          example: "Ulitsa Pushkina 8"
          
        - type: string
          name: Passport Number
          example: "4567123123"
      responses:
        '200':
          description: successful operation
          
  /user/delete:
    get:
      description: delete user from db
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Users
      summary: delete user from db
      parameters:
        - type: integer
          name: delete user
          
      responses:
      '200':
        description: successful operation
        

  /user/update
    get:
      description: update user`s info 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Users
      summary: update information
      parameters:
        - type: integer
          name: user`s ID
          example: "1"
          
        - type: string
          name: client_name
          example: "Artem"
          
        - type: string
          name: Surname
          example: "Ivanov"
          
        - type: string
          name: Address
          example: "Ulitsa Pushkina 8"
          
        - type: string
          name: Passport Number
          example: "4567123123"
          
      responses:
      '200':
        description: successful operation
        
  /user/get-users
    get:
      description: get user`s info 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Users
      summary: get information
      parameters:
        - type: integer
          name: user`s ID
          example: "1"
          
        - type: string
          name: client_name
          example: "Artem"
          
        - type: string
          name: Surname
          example: "Ivanov"
          
        - type: string
          name: Address
          example: "Ulitsa Pushkina 8"
          
        - type: string
          name: Passport Number
          example: "4567123123"
          
      responses:
      '200':
        description: successful operation
        
  /user/get-time
    get:
      description: get user`s time per task info 
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Users
      summary: get user`s time per task info 
      parameters:
        - type: integer
          name: user`s ID
          example: "1"
          
      responses:
      '200':
        description: successful operation
        
  /task/create
    get:
      description: create task
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Users
      summary: create task
      parameters:
        - type: String
          name: Title of task
          example: "Do this"
          
        - type: integer
          name: UserID 
          example: "456"
          
        - type: StartedAt
          name: time of start
          example: "14.07.2024 00:56"
          
          type: FinishedAt
          name: time of finish
          example: "14.07.2024 00:56"
          
          type: Time
          name: Time for task
          example: "1h 23m"
         
      responses:
      '200':
        description: successful operation
        
  /task/start
    get:
      description: start task
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Users
      summary: start task
      parameters:
        - type: integer
          name: task id
          example: "1"
          
      responses:
      '200':
        description: successful operation
        
    /task/finish
    get:
      description: finish task
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Users
      summary: finish task
      parameters:
        - type: integer
          name: task id
          example: "1"
          
      responses:
      '200':
        description: successful operation
        